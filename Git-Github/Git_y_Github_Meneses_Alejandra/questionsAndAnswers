1. ¿Quien inventó el sistema de control de versión Git y porque?

R/= Hoy en día, Git es, con diferencia, el sistema de control de versiones moderno más utilizado del mundo. Git es un proyecto de código abierto maduro y con un mantenimiento activo que desarrolló originalmente Linus Torvalds, el famoso creador del kernel del sistema operativo Linux, en 2005. Un asombroso número de proyectos de software dependen de Git para el control de versiones, incluidos proyectos comerciales y de código abierto. Los desarrolladores que han trabajado con Git cuentan con una buena representación en la base de talentos disponibles para el desarrollo de software, y este sistema funciona a la perfección en una amplia variedad de sistemas operativos e IDE (entornos de desarrollo integrados).

Git, que presenta una arquitectura distribuida, es un ejemplo de DVCS (sistema de control de versiones distribuido, por sus siglas en inglés). En lugar de tener un único espacio para todo el historial de versiones del software, como sucede de manera habitual en los sistemas de control de versiones antaño populares, como CVS o Subversion (también conocido como SVN), en Git, la copia de trabajo del código de cada desarrollador es también un repositorio que puede albergar el historial completo de todos los cambios.

Además de contar con una arquitectura distribuida, Git se ha diseñado teniendo en cuenta el rendimiento, la seguridad y la flexibilidad.

2. ¿A quien pertenece actualmente Github y porque?

R/= Pertenece a Microsoft GitHub Inc. Microsoft
Microsoft ha llegado a un acuerdo para adquirir GitHub, plataforma de desarrollo colaborativo de software, por 7.500 millones de dólares (6.406 millones de euros) en acciones, según ha anunciado el gigante de Redmond, que espera cerrar la compra a finales de año.

Tras el cierre de la transacción, GitHub, que cuenta con más de 28 millones de usuarios, pasará a presentar sus cuentas como parte del negocio de Inteligencia en la Nube, indicó Microsoft, que confía en que la adquisición tendrá reflejo en sus cuentas del ejercicio fiscal 2020 con un impacto dilutivo mínimo inferior al 1% en el beneficio por acción de los ejercicios 2019 y 2020.

El vicepresidente de Microsoft Corporate, Nat Friedman, asumirá el cargo de consejero delegado de GitHub tras la adquisición, mientras el actual responsable de la plataforma, Chris Wanstrath, se convertirá en socio técnico de Microsoft, reportando al vicepresidente ejecutivo de Microsoft, Scott Guthrie, para trabajar en iniciativas estratégicas de software.

Microsoft asegura que GitHub mantendrá su distintivo enfoque de anteponer a los desarrolladores y seguirá operando de forma independiente para ofrecer una plataforma abierta a todos los desarrolladores e industrias. De este modo, los usuarios de GitHub podrán seguir utilizando los lenguajes de programación, herramientas y sistemas operativos de su elección para sus proyectos.

"Microsoft es una plataforma que antepone a los desarrolladores y al unir fuerzas con GitHub reforzamos nuestro compromiso con la libertad, la apertura y la innovación", declaró Satya Nadella, consejero delegado de Microsoft.

Por su parte, Wanstrath destacó el "brillante futuro" para el desarrollo de software, subrayando que la unión con Microsoft contribuirá a hacerlo realidad. "Su escala, herramientas y nube global desempeñarán un enorme papel en hacer GitHub incluso más valiosa para los desarrolladores de todo el mundo", añadió.

GitHub es un repositorio de código online muy popular entre los desarrolladores de código abierto. El precio que paga Microsoft, muy superior al de su última valoración, indica el interés de la compañía de Redmond por hacerse un hueco en el mundo del software libre.

3. ¿Hay otra forma que no sea la terminal para trabajar con Github?

R/= Existen muchas formas de usar Git. Por un lado tenemos las herramientas originales de línea de comandos, y por otro lado tenemos una gran variedad de interfaces de usuario con distintas capacidades. En este libro vamos a utilizar Git desde la línea de comandos. La línea de comandos es el único lugar en donde puedes ejecutar todos los comandos de Git - la mayoría de interfaces gráficas de usuario solo implementan una parte de las características de Git por motivos de simplicidad. Si tú sabes cómo realizar algo desde la línea de comandos, seguramente serás capaz de averiguar cómo hacer lo mismo desde una interfaz gráfica. Sin embargo, la relación opuesta no es necesariamente cierta. Así mismo, la decisión de qué cliente gráfico utilizar depende totalmente de tu gusto, pero todos los usuarios tendrán las herramientas de línea de comandos instaladas y disponibles
